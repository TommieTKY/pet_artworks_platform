@model PetArtworksPlatform.Models.ExhibitionItemDto
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "View Exhibition";
}

<h1>@Model.ExhibitionTitle</h1>

<div class="row">
    <div class="col-md-6">
        <h4>Exhibition Information</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ExhibitionTitle)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ExhibitionTitle)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ExhibitionDescription)
            </dt>
            <dd class="col-sm-8">
                @Html.Raw(@Model.ExhibitionDescription)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.StartDate)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.StartDate)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.EndDate)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.EndDate)
            </dd>
        </dl>
    </div>
    <div class="col-md-6">
        <h4>Artworks</h4>
        <hr />
        <ul>
            @foreach (var artwork in Model?.ListArtworks ?? [])
            {
                <li>
                    <a href="/ArtworkPage/Details/@artwork.ArtworkId">@artwork.ArtworkTitle</a>
                </li>
            }
        </ul>
    </div>
</div>
<div>
    <a asp-action="List" class="btn btn-secondary">Back to List</a>
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model.ExhibitionId" class="btn btn-warning">Edit</a>
        <a asp-action="ConfirmDelete" asp-route-id="@Model.ExhibitionId" class="btn btn-danger">Delete</a>
    }
</div>
