@model PetArtworksPlatform.Models.ViewModels.ArtworkListView
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Artworks";
}

<h1>Artworks</h1>

@if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("ArtistUser")))
{
    <p style="margin-top:20px;">
        <a asp-action="New">Create New</a>
    </p>
}

<div style="margin:25px;">
    @if (Model.MaxPage > 0)
    {
        <a href="/ArtworkPage/List?PageNum=@(Model.Page - 1)">&laquo; Prev</a>
        <span>Page @(Model.Page + 1) of @(Model.MaxPage + 1)</span>
        <a href="/ArtworkPage/List?PageNum=@(Model.Page + 1)">Next &raquo;</a>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Artworks.First().ArtworkTitle)
            </th>
            <th>
                Image
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Artworks)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ArtworkTitle)
                </td>
                <td>
                    <img style="width:auto; height:50px;" src="@item.ArtworkImagePath" />
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ArtworkId">Details</a>
                    @if (Model.isAdmin)
                    {
                        <span> | </span>
                        <a asp-action="Edit" asp-route-id="@item.ArtworkId">Edit</a>
                        <span> | </span>
                        <a asp-action="ConfirmDelete" asp-route-id="@item.ArtworkId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

